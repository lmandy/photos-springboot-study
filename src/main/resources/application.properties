#数据源
spring.datasource.url=jdbc:mysql:///img_test?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#连接池
# 初始化大小，最小，最大
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000  
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000  
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 'x'  
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=false  
spring.datasource.testOnReturn=false  
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true  
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j  
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true  


#mybatis配置
mybatis.type-aliases-package=com.lmandy.bean
mybatis.mapperLocations=classpath:com.lmandy.dao/**/*Mapper.xml

##通用mapper(本文是MyMapper全路径)
#mapper.mappers=com.lmandy.utils.MyMapper
#mapper.not-empty=false
#mapper.identity=MYSQL
##分页组件pagehelper
#pagehelper.helperDialect=mysql
#pagehelper.reasonable=true
#pagehelper.supportMethodsArguments=true
#pagehelper.params=count=countSql


# 格式化数据json字符串
spring.jackson.serialization.indent_output=true

#MVC-jsp 模板
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp

#MVC-thymeleaf模板
#关闭缓存，这个开发配置为false，避免改了模板还要重启服务器
spring.thymeleaf.cache=false
# 这个是配置模板路径的，默认就是templates，可不用配置
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# 这个可以不配置，检查模板位置
spring.thymeleaf.check-template-location=true
#编码
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
# 模板的模式
spring.thymeleaf.mode=LEGACYHTML5



#中文乱码处理
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8

#修改Tomcat默认端口和默认访问路径
#server.context-path=/helloboot
#server.port=8081

##发生错误时跳转
#server.error.path=/error

# session最大超时时间(分钟)，默认为30
server.session-timeout=20
# 该服务绑定IP地址，启动服务器时如本机不是该IP地址则抛出异常启动失败，只有特殊需求的情况下才配置
# server.address=192.168.16.11

test.msg=Hello World Springboot!


#root日志级别
logging.level.root = info
#web日志级别
logging.level.org.springframework.web=debug
#sql日志，其中logging.level.com.你的Mapper包=日志等级
logging.level.com.lmandy.dao=debug
#日志输出路径，如果不配置logging.file ，则会在该配置的路径下创建名为springboot.log
logging.path= D://
#日志文件名称，如何不配置 logging.path 则默认在当前的项目路径下创建该文件
#logging.file=



imgUrl = http://localhost:80/image/
filePath = D://nginx-1.13.12//html//image
#filePath = /usr/local/nginx/html/image/


